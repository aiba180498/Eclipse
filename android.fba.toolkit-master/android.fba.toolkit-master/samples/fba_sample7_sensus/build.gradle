apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {

    signingConfigs {
        debug {
            storeFile file('../../keystore/avesha_debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file(properties.getProperty("release.store.file"))
            storePassword properties.getProperty("release.store.password")
            keyAlias properties.getProperty("release.key.alias")
            keyPassword properties.getProperty("release.key.password")
        }
    }

    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "ru.profi1c.samples.sensus"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 2
        versionName "1.00"
        
        multiDexEnabled true
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../../engine/proguard-rules.pro', 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [ google_map_key:properties.getProperty("release.googlemap.key")]
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            manifestPlaceholders = [ google_map_key:"AIzaSyCKstxedt72sv6t6nlY72mGeXo84C9fgZE"]
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/org.xmlpull.v1.XmlPullParserFactory'
        exclude 'com/j256/ormlite/android/LICENSE.txt'
        exclude 'com/j256/ormlite/android/README.txt'
        exclude 'com/j256/ormlite/core/LICENSE.txt'
        exclude 'com/j256/ormlite/core/README.txt'
        exclude 'COPYING'
        exclude 'COPYING.LESSER'
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(".apk", "-${variant.versionName}.apk"))
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:multidex:1.0.1'
    compile project(':engine')
    compile('com.mikepenz:materialdrawer:3.1.2@aar') {
        transitive = true
    }
    compile 'com.google.android.gms:play-services:7.5.+'
    compile 'com.android.support:recyclerview-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.0.0'
    compile 'com.android.support:design:22.2.1'
    compile 'com.android.support:palette-v7:22.2.1'
}