package ru.profi1c.engine.exchange;

import java.io.File;
import java.util.HashMap;
import java.util.List;

/**
 * Слушатель событий обмена с сервером. Когда процедура обмена выполняется по
 * фиксированным правилам определенным в {@link ExchangeTask} или его
 * наследниках
 */
public interface IExchangeCallbackListener {

    /**
     * Вызывается перед упаковкой в json измененных объектов (константы,
     * справочники, документы, внешние таблицы) непосредственно перед отправкой
     * данных на сервер 1С. Вы можете исключить любой объект, для этого удалите
     * его из списка или полностью отказаться от передачи объектов этого типа –
     * установить возвращаемое значение равным false
     *
     * @param classOf класс объектов
     * @param values  коллекция объектов
     * @return
     */
    boolean onSerializeTable(Class<?> classOf, List<Object> values);

    /**
     * Перед началом десериализации входящих данных из JSON.Вы можете исключить
     * из десериализации (следовательно, и добавление в локальную базу) любой
     * объект, для этого просто удалите его из коллекции
     *
     * @param mapJsonData коллекция полученных данных от сервера 1С, где File – путь
     *                    файлу с json-данными, Class (класс констант, классы
     *                    справочников, документов, регистров сведений и внешних
     *                    таблиц), объекты которого ожидается в json
     */
    void onDeserializeJson(HashMap<Class<?>, File> mapJsonData);

    /**
     * Получен отказ от сервера 1С при сохранении данных. Отказ не обязательно
     * связан с ошибкой в данных, возможно сохранение этих данных отключено в
     * схеме обмена (со стороны сервера). По умолчанию процедура обмена
     * продолжается, при следующем цикле обмена снова будет произведена попытка
     * сохранения этих данных.
     *
     * @param clazz  класс передаваемых объектов
     * @param values коллекция объектов
     */
    void onDeniedDataSavedOnServer(Class<?> clazz, List<Object> values);

    /**
     * Вызывается перед обновлением таблицы данных (константы, справочники,
     * документы, внешние таблицы) в локальной базе. Вы можете исключить любой
     * объект, для этого удалите его из списка или полностью отказаться от
     * сохранения объектов этого типа – установить возвращаемое значение равным
     * false
     *
     * @param classOf   класс объектов
     * @param newValues коллекция объектов
     * @return
     */
    boolean onUpdateTable(Class<?> classOf, List<Object> newValues);

    /**
     * Произошла ошибка во время обмена
     *
     * @param event событие
     * @param msg   описание ошибки
     */
    void onError(String event, String msg);

    /**
     * Обмен отменен пользователем интерактивно (при закрытии диалога) или
     * программно
     */
    void onCancel();

    /**
     * Обмен завершен
     *
     * @param result флаг успешности
     */
    void onComplete(boolean result);

}
